/* Import fonts */
@import url('https://fonts.googleapis.com/css2?family=Inter&family=Rajdhani:wght@700&family=Work+Sans:wght@500&display=swap');

.hero-gradient {
    background: linear-gradient(135deg, #3b82f6 0%, #2563eb 25%, #1d4ed8 50%, #1e40af 75%, #1e3a8a 100%);
    position: relative;
    overflow: hidden;
    color: white;
}
body {
  font-family: 'Geist', sans-serif;
}

/* Floating shapes â€” multiple blurred neon glows with drifting */
.floating-shape {
    position: absolute;
    background: #3b82f6;
    border-radius: 50%;
    filter: drop-shadow(0 0 10px #3b82f6) drop-shadow(0 0 30px #2563eb);
    animation: floatDrift 12s ease-in-out infinite;
    opacity: 0.25;
    will-change: transform, opacity;
}

.floating-shape:nth-child(1) {
    width: 90px;
    height: 90px;
    top: 12%;
    left: 12%;
    animation-delay: 0s;
}
.floating-shape:nth-child(2) {
    width: 55px;
    height: 55px;
    top: 25%;
    right: 15%;
    animation-delay: 4s;
}
.floating-shape:nth-child(3) {
    width: 45px;
    height: 45px;
    bottom: 25%;
    left: 18%;
    animation-delay: 8s;
}
.floating-shape:nth-child(4) {
    width: 110px;
    height: 110px;
    bottom: 12%;
    right: 22%;
    animation-delay: 2s;
}

@keyframes floatDrift {
    0%, 100% {
        transform: translate(0, 0) scale(1);
        opacity: 0.25;
    }
    50% {
        transform: translate(20px, -15px) scale(1.15);
        opacity: 0.4;
    }
}

/* Hero Title */

.hero-title {
    font-family: 'Rajdhani', sans-serif;
    font-weight: 700;
    font-size: 4rem;
    color: white;
    position: relative;
    user-select: none;
    letter-spacing: 0.05em;
    filter:
        drop-shadow(0 0 4px rgba(59, 130, 246, 0.8))
        drop-shadow(0 0 10px rgba(37, 99, 235, 0.6));
    /* 3D Rotation */
    transform-style: preserve-3d;
    perspective: 1000px;
    animation: rotate3D 20s linear infinite;
}

/* 3D slow rotation */
@keyframes rotate3D {
    0% { transform: rotateX(0deg) rotateY(0deg); }
    25% { transform: rotateX(2deg) rotateY(10deg); }
    50% { transform: rotateX(0deg) rotateY(20deg); }
    75% { transform: rotateX(-2deg) rotateY(10deg); }
    100% { transform: rotateX(0deg) rotateY(0deg); }
}

/* Neon glow flicker (random flickering) */
.hero-title::after {
    content: '';
    position: absolute;
    inset: 0;
    pointer-events: none;
    mix-blend-mode: screen;
    filter: drop-shadow(0 0 10px #3b82f6) drop-shadow(0 0 20px #2563eb);
    animation: flickerGlow 3s infinite;
}

@keyframes flickerGlow {
    0%, 100% { opacity: 1; }
    40%, 60% { opacity: 0.7; }
    50% { opacity: 1; }
}

/* Gradient light sweep using a pseudo element */
.hero-title::before {
    content: '';
    position: absolute;
    top: 0; left: -50%;
    width: 200%;
    height: 100%;
    background: linear-gradient(
        120deg,
        rgba(255 255 255 / 0.15) 0%,
        rgba(255 255 255 / 0.3) 50%,
        rgba(255 255 255 / 0.15) 100%
    );
    transform: skewX(-20deg);
    animation: sweepLight 6s linear infinite;
    pointer-events: none;
    mix-blend-mode: screen;
}

@keyframes sweepLight {
    0% { left: -50%; }
    100% { left: 150%; }
}

/* Subtitle with fade + upward float */
.hero-subtitle {
    font-family: 'Work Sans', sans-serif;
    font-weight: 500;
    font-size: 1.6rem;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeUp 1.5s ease forwards 0.7s;
    color: white;
    text-shadow: 0 2px 10px rgba(0 0 0 / 0.3);
}

/* Keep original hero-description styles unchanged */
/* Just re-adding your previous code for .hero-description exactly */
.hero-description {
    font-family: 'Inter', sans-serif;
    font-weight: 600;
    color: rgba(255, 255, 255, 0.9);
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    animation: fadeInUp 1s ease-out 1s both;
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeUp {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Responsive */
@media (max-width: 768px) {
    .hero-title {
        font-size: 2.8rem;
    }
    .hero-subtitle {
        font-size: 1.25rem;
    }
    .hero-description {
        font-size: 1.1rem;
    }
}

/* Styles */
.video-container {
  position: relative;
}

.video-overlay {
  mix-blend-mode: multiply;
}

.shape-1,
.shape-2 {
  opacity: 0.5;
}


 .win-win-section {
    position: relative;
    background: linear-gradient(160deg, #f1f8ff 0%, #ffffff 100%);
  }
  
  .heading-underline {
    position: relative;
    display: inline-block;
    padding-bottom: 8px;
  }
  
  .heading-underline::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 4px;
    background: linear-gradient(90deg, #ec4899, #3b82f6, #f59e0b);
    border-radius: 2px;
  }
  
  .win-card {
    background: white;
    border-radius: 16px;
    padding: 24px;
    transition: all 0.3s ease;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.03), 0 4px 6px -2px rgba(0, 0, 0, 0.01);
  }
  
  .win-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.08), 0 10px 10px -5px rgba(0, 0, 0, 0.02);
  }
  
  .win-card-image-container {
    transition: all 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);
  }
  
  .win-card:hover .win-card-image-container img {
    transform: scale(1.05);
  }
  
  .win-card-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to top, rgba(0,0,0,0.2) 0%, rgba(0,0,0,0) 30%);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .win-card:hover .win-card-overlay {
    opacity: 1;
  }
  
  .win-card-button {
    display: inline-flex;
    align-items: center;
    padding: 8px 16px;
    border-radius: 9999px;
    font-weight: 600;
    font-size: 0.875rem;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
  }
  
  .win-card-arrow {
    transition: transform 0.3s ease;
  }
  
  .win-card-button:hover .win-card-arrow {
    transform: translateX(3px);
  }
  
  @media (max-width: 768px) {
    .win-card {
      padding: 18px;
    }
  }

  .steps-section {
    position: relative;
    background: linear-gradient(to bottom, #ffffff 0%, #f8fafc 100%);
  }
  
  .heading-gradient {
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    background-image: linear-gradient(to right, #4f46e5, #ec4899);
  }
  
  .step-card {
    position: relative;
    transition: all 0.4s ease;
  }
  
  .step-image-container:hover img {
    transform: scale(1.03);
  }
  
  .step-number {
    transition: all 0.3s ease;
    z-index: 10;
  }
  
  .step-card:hover .step-number {
    transform: scale(1.1);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.2);
  }
  
  .step-button {
    display: inline-flex;
    align-items: center;
    padding: 12px 24px;
    border-radius: 50px;
    font-weight: 600;
    color: #4f46e5;
    background-color: #f1f5f9;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
  }
  
  .step-button:hover {
    background-color: #e0e7ff;
    color: #4338ca;
    transform: translateY(-2px);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }
  
  .step-content {
    position: relative;
  }
  
  @media (max-width: 768px) {
    .step-image-container {
      margin-bottom: 2rem;
    }
    
    .step-number {
      width: 14px;
      height: 14px;
      font-size: 1rem;
      left: 10px;
      top: 10px;
    }
    
    .step-button {
      padding: 10px 20px;
      font-size: 0.9rem;
    }
  }

  /* Triangle clip shape */
.clip-triangle {
  clip-path: polygon(0 100%, 100% 100%, 100% 0);
}








@keyframes blob {
  0%, 100% {
    transform: translate(0,0) scale(1);
  }
  33% {
    transform: translate(30px,-20px) scale(1.1);
  }
  66% {
    transform: translate(-20px,30px) scale(0.9);
  }
}
.animate-blob {
  animation: blob 10s infinite ease-in-out;
}
.animation-delay-4000 {
  animation-delay: 4s;
}
.animation-delay-6000 {
  animation-delay: 6s;
}

/* 3D perspective container */
.perspective-1500 {
  perspective: 1500px;
}
.transform-style {
  transform-style: preserve-3d;
}




 